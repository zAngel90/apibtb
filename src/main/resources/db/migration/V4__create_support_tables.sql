-- Crear tabla de jurisdicciones
CREATE TABLE IF NOT EXISTS winners.jurisdic
(
    codigo smallint NOT NULL,
    nombre character(20) COLLATE pg_catalog."default",
    convenio smallint,
    activa smallint,
    string1 character(20) COLLATE pg_catalog."default",
    long1 integer,
    byte1 smallint,
    decimal1 numeric(12,2),
    cuentaretensifmult smallint,
    cuentapercepsifmult smallint,
    cuentapercepsifadua smallint,
    CONSTRAINT key01_jurisdic PRIMARY KEY (codigo)
);

-- Crear tabla de pa√≠ses
CREATE TABLE IF NOT EXISTS winners.paises
(
    codigo smallint NOT NULL,
    nombre character(25) COLLATE pg_catalog."default",
    string1 character(20) COLLATE pg_catalog."default",
    long1 integer,
    byte1 smallint,
    decimal1 numeric(12,2),
    CONSTRAINT key01_paises PRIMARY KEY (codigo)
);

-- Crear tabla de situaciones impositivas
CREATE TABLE IF NOT EXISTS winners.sitimp
(
    libroiva character(2) COLLATE pg_catalog."default" NOT NULL,
    codigo smallint NOT NULL,
    nombre character(30) COLLATE pg_catalog."default",
    activo_1 smallint,
    manual_1 smallint,
    tasa_1 numeric(8,4),
    activo_2 smallint,
    manual_2 smallint,
    tasa_2 numeric(8,4),
    activo_3 smallint,
    manual_3 smallint,
    tasa_3 numeric(8,4),
    activo_4 smallint,
    manual_4 smallint,
    tasa_4 numeric(8,4),
    activo_5 smallint,
    manual_5 smallint,
    tasa_5 numeric(8,4),
    activo_6 smallint,
    manual_6 smallint,
    tasa_6 numeric(8,4),
    activo_7 smallint,
    manual_7 smallint,
    tasa_7 numeric(8,4),
    activo_8 smallint,
    manual_8 smallint,
    tasa_8 numeric(8,4),
    activo_9 smallint,
    manual_9 smallint,
    tasa_9 numeric(8,4),
    activo_10 smallint,
    manual_10 smallint,
    tasa_10 numeric(8,4),
    activo_11 smallint,
    manual_11 smallint,
    tasa_11 numeric(8,4),
    activo_12 smallint,
    manual_12 smallint,
    tasa_12 numeric(8,4),
    activo_13 smallint,
    manual_13 smallint,
    tasa_13 numeric(8,4),
    activo_14 smallint,
    manual_14 smallint,
    tasa_14 numeric(8,4),
    integridad smallint,
    string1 character(20) COLLATE pg_catalog."default",
    string2 character(20) COLLATE pg_catalog."default",
    long1 integer,
    long2 integer,
    byte1 smallint,
    byte2 smallint,
    decimal1 numeric(12,2),
    decimal2 numeric(12,2),
    activo_15 smallint,
    manual_15 smallint,
    tasa_15 numeric(8,4),
    activo_16 smallint,
    manual_16 smallint,
    tasa_16 numeric(8,4),
    activo_17 smallint,
    manual_17 smallint,
    tasa_17 numeric(8,4),
    activo_18 smallint,
    manual_18 smallint,
    tasa_18 numeric(8,4),
    activo_19 smallint,
    manual_19 smallint,
    tasa_19 numeric(8,4),
    activo_20 smallint,
    manual_20 smallint,
    tasa_20 numeric(8,4),
    calculasobre_1 smallint,
    calculasobre_2 smallint,
    calculasobre_3 smallint,
    calculasobre_4 smallint,
    calculasobre_5 smallint,
    calculasobre_6 smallint,
    calculasobre_7 smallint,
    calculasobre_8 smallint,
    calculasobre_9 smallint,
    calculasobre_10 smallint,
    calculasobre_11 smallint,
    calculasobre_12 smallint,
    calculasobre_13 smallint,
    calculasobre_14 smallint,
    calculasobre_15 smallint,
    calculasobre_16 smallint,
    calculasobre_17 smallint,
    calculasobre_18 smallint,
    calculasobre_19 smallint,
    calculasobre_20 smallint,
    CONSTRAINT key01_sitimp PRIMARY KEY (libroiva, codigo)
);

-- Crear tabla de situaciones por defecto
CREATE TABLE IF NOT EXISTS winners.sitdef
(
    orden smallint NOT NULL,
    tipoiva character(3) COLLATE pg_catalog."default",
    compras character(2) COLLATE pg_catalog."default",
    sitimpositivacompras smallint,
    ventas character(2) COLLATE pg_catalog."default",
    sitimpositivaventas smallint,
    CONSTRAINT key01_sitdef PRIMARY KEY (orden)
);

-- Crear tabla de formas de pago
CREATE TABLE IF NOT EXISTS winners.forpago
(
    codigo smallint NOT NULL,
    nombre character(30) COLLATE pg_catalog."default",
    activo smallint,
    string1 character(20) COLLATE pg_catalog."default",
    string2 character(20) COLLATE pg_catalog."default",
    long1 integer,
    long2 integer,
    byte1 smallint,
    byte2 smallint,
    decimal1 numeric(12,2),
    decimal2 numeric(12,2),
    CONSTRAINT key01_forpago PRIMARY KEY (codigo)
); 